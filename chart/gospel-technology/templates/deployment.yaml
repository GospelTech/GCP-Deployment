apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels: &InstallerDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: gospel-installer
spec:
  replicas: 1
  selector:
    matchLabels: *InstallerDeploymentLabels
  template:
    metadata:
      labels: *InstallerDeploymentLabels
    spec:
      containers:
        - name: {{ .Chart.Name }}-frontend
          image: "{{ .Values.frontend.image }}"
          imagePullPolicy: Always
          ports:
            - name: frontend-http
              containerPort: 80
              protocol: TCP
            - name: frontend-https
              containerPort: 443
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /home
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: certs
              mountPath: /etc/nginx/certs
              readOnly: true
        - name: {{ .Chart.Name }}-backend
          image: "{{ .Values.backend.image }}"
          imagePullPolicy: Always
          ports:
            - name: installer-back
              containerPort: 8080
              protocol: TCP
          env:
          - name: APP_K8S_NAME
            value: {{ .Release.Name }}
          - name: APP_K8S_INSTANCE
            value: {{ .Release.Name }}
          - name: NAMESPACE
            value: {{.Release.Namespace}}
          - name: CHAINCODE_IMAGE
            value: "{{ .Values.chaincode.image }}"
          - name: DATAIMPORTER_IMAGE
            value: "{{ .Values.dataImporter.image }}"
          - name: ENDORSING_PEER_IMAGE
            value: "{{ .Values.endorsingPeer.image }}"
          - name: GOSPEL_BACKEND_IMAGE
            value: "{{ .Values.gospelBackend.image }}"
          - name: KEYSTORE_IMAGE
            value: "{{ .Values.keystore.image }}"
          - name: NGINX_IMAGE
            value: "{{ .Values.nginx.image }}"
          - name: ORCHESTRATOR_IMAGE
            value: "{{ .Values.orchestrator.image }}"
          - name: ORDERER_IMAGE
            value: "{{ .Values.orderer.image }}"
          - name: SIGNER_IMAGE
            value: "{{ .Values.signer.image }}"
          - name: SOAS_IMAGE
            value: "{{ .Values.soas.image }}"
          - name: SOAU_IMAGE
            value: "{{ .Values.soau.image }}"
          - name: SOI_IMAGE
            value: "{{ .Values.soi.image }}"
      serviceAccountName: {{ .Values.installer.serviceAccount }}
      volumes:
        - name: certs
          secret:
            secretName: {{.Release.Name}}-frontend-secret
        - name: nginx-config
          configMap:
            name: {{.Release.Name}}-frontend-configmap
